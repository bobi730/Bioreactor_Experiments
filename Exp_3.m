(* ::Package:: *)

(* ::Input:: *)
(*k1=10.5;*)
(*k2=28.6;*)
(*k3=1074;*)
(*k4=675;*)
(*s1in=7.5;*)
(*s2in=75;*)
(*\[Alpha]=0.5;*)
(*m1=1.3; ks1=6.85;*)
(*m2=0.74; ks2=9.64; ki=16;*)
(*\[Mu]1[s_]:=m1*s/(ks1+s);   \[Mu]2[s_]:=m2*s/(ks2+s+(s/ki)^2);  *)
(**)
(*s1m=3.93506;*)
(*s1p=4.23859;*)
(**)
(*um=\[Mu]1[s1m]/\[Alpha]; up=\[Mu]1[s1p]/\[Alpha];*)
(*s2m=Solve[\[Mu]2[c]==\[Alpha]*um,c];*)
(*s2p=Solve[\[Mu]2[d]==\[Alpha]*up,d];*)
(**)
(*smin=k2/k1*s1m+c/.s2m[[1]];*)
(*spl=k2/k1*s1p+d/.s2p[[1]];*)
(*sin=k2/k1*s1in+ s2in;*)
(*xmin=(sin-smin)/(\[Alpha]*k3);xpl=(sin-spl)/(\[Alpha]*k3);xcm=(spl+k3*xpl-smin)/k3;xcp=(smin+k3*xmin-spl)/k3;*)
(*x1min=(s1in-s1m)/(\[Alpha]*k1);x1pl=(s1in-s1p)/(\[Alpha]*k1);x1cm=(s1p+k1*x1pl-s1m)/k1;x1cp=(s1m+k1*x1min-s1p)/k1;*)
(*Lmp=Graphics[{EdgeForm[Thin],Polygon[{{smin,xmin},{smin,xcm},{spl,xpl},{spl,xcp}}]}];*)
(*Lmp1=Graphics[{EdgeForm[Thin],Opacity[0.025],Polygon[{{s1m,x1min},{s1m,x1cm},{s1p,x1pl},{s1p,x1cp}}]}];*)
(**)
(**)
(* *)
(*steps =180;*)
(* *)


(* ::Input:: *)
(* *)
(* *)
(*Starts={};*)
(**)
(*For[i=0,i<9,i++,*)
(*If[i<=2,*)
(*	s10=RandomReal[0.12];*)
(*	x10=RandomReal[15];*)
(*	s20=RandomReal[0.12];*)
(*	x20=RandomReal[0.09];*)
(*,*)
(*If[i<=4,*)
(*	s10=RandomReal[{7.5,10}];*)
(*	x10=RandomReal[15];*)
(*	s20=RandomReal[{75,100}];*)
(*	x20=RandomReal[0.09];*)
(*,*)
(*If[i<=5,*)
(*	s10=RandomReal[{7.5,10}];*)
(*	x10=RandomReal[15];*)
(*	s20=RandomReal[{75,100}];*)
(*	x20=RandomReal[20];*)
(*,*)
(*	s10=RandomReal[7.5];*)
(*	x10=RandomReal[15];*)
(*	s20=RandomReal[75];*)
(*	x20=RandomReal[20];*)
(*];*)
(*];*)
(*];*)
(*AppendTo[Starts,{s10,x10,s20,x20}]*)
(*];*)
(* *)


(* ::Input:: *)
(*Starts={{0.08357508403733682`,4.874574315038171`,0.0372892807406425`,0.08389059590030543`},{0.10955551259178894`,5.439698928077394`,0.09473417334031911`,0.05503205668558386`},{0.07640525351595143`,0.9932524963318965`,0.03594875173053855`,0.07980648500557949`},{8.508382790014615`,13.951123788783633`,99.7744746053198`,0.0700670276102397`},{9.605124833412816`,5.379543273973109`,96.97663937039454`,0.03737022863599371`},{9.392198665004669`,1.7609749553784724`,92.23051779178999`,14.956347027793292`},{1.5095458169012144`,5.575613825574813`,55.21895102782497`,2.4607922809525107`},{4.579828207641386`,14.353494984947655`,7.806179900690935`,19.135721463402838`},{5.798511399085898`,5.058808024687917`,48.80263795039045`,9.256812505759182`}};*)
(**)
(*Plots={};*)
(*Ends={};*)
(**)
(*Plots1={};*)
(*Ends1={};*)
(**)
(*ufun[t_]:=(um+ up)/2 (*const*)*)
(*udun[t_]:=(up*(steps-t)+ um*t)/steps(*diagonal*)*)
(*ulun[t_]:=um+Log[(t+1)]/(Log[steps+1]/(up-um))(* logarithm*)*)
(*upun[t_]:=(up-um)/steps^2*t^2+um (*parabola*)*)
(*usun[t_]:=(up+um)/2+(up-um)/2*Sin[t/5.73] (*sin*)*)
(*(*ufun[t_]:=um*)
(*ufun[t_]:=up*)*)
(**)
(*jump=RandomInteger[steps];*)
(*when=RandomReal[{0,steps},jump];*)
(*AppendTo[when,0];*)
(*AppendTo[when,steps];*)
(*where=RandomReal[{um,up},jump+2];*)
(**)
(*points=SortBy[Transpose[{when,where}],First];*)
(*urun=Interpolation[points,InterpolationOrder->1];*)
(**)
(**)
(**)
(*a=Plot[um,{t,0,steps},PlotStyle->LightGray];*)
(*b=Plot[up,{t,0,steps},PlotStyle->LightGray];*)
(*Show[a,b,Plot[usun[t],{t,0,steps},PlotStyle->Lighter[Gray]],Plot[udun[t],{t,0,steps},PlotStyle->Red],Plot[ulun[t],{t,0,steps},PlotStyle->Magenta],Plot[upun[t],{t,0,steps},PlotStyle->Brown],Plot[ufun[t],{t,0,steps},PlotStyle->Orange],Plot[urun[t],{t,0,steps},PlotStyle->Lighter[Pink]],PlotRange->(*All*){{0,180},{um,up}}]*)


(* ::Input:: *)
(*flag={steps, steps, steps ,steps, steps ,steps,steps,steps,steps};*)
(*ufun=urun;*)
(*For[i=0,i<9,i++,*)
(**)
(*{s1sol,x1sol,s2sol,x2sol}=NDSolveValue[{s1'[t]==ufun[t]*(s1in-s1[t])-k1*\[Mu]1[s1[t]]*x1[t],*)
(*										x1'[t]==(\[Mu]1[s1[t]]-\[Alpha]*ufun[t])*x1[t],*)
(*										s2'[t]==ufun[t]*(s2in-s2[t])+k2*\[Mu]1[s1[t]]*x1[t]+-k3*\[Mu]2[s2[t]]*x2[t],*)
(*										x2'[t]==(\[Mu]2[s2[t]]-\[Alpha]*ufun[t])*x2[t],*)
(*										s1[0]==Starts[[i+1]][[1]],x1[0]==Starts[[i+1]][[2]],s2[0]==Starts[[i+1]][[3]],x2[0]==Starts[[i+1]][[4]]},*)
(*						                                      {s1,x1,s2,x2},{t,0,steps}];*)
(*scomp[t_]:=k2/k1*s1sol[t] + s2sol[t];*)
(**)
(*For[a=0,a<steps, a++,*)
(*If [scomp[a]>= smin && scomp[a]<= spl &&  scomp[a]+k3*x2sol[a]>=smin +k3*xcm  &&scomp[a]+k3 x2sol[a]<= smin +k3*xmin,*)
(*	If[a<= flag[[i+1]],flag[[i+1]]=a]*)
(*];*)
(*];*)
(**)
(*];*)
(*Starts*)
(*ForPic={};*)
(*For[i=0, i<9,i++,*)
(*AppendTo[ForPic,{{Starts[[i+1]][[3]]},{Starts[[i+1]][[4]]}}]*)
(*];*)
(**)
(*flag*)
(*Show[a,b,Plot[usun[t],{t,0,steps},PlotStyle->Lighter[Gray]],Plot[udun[t],{t,0,steps},PlotStyle->Red],Plot[ulun[t],{t,0,steps},PlotStyle->Magenta],Plot[upun[t],{t,0,steps},PlotStyle->Brown],Plot[ufun[t],{t,0,steps},PlotStyle->Orange],Plot[urun[t],{t,0,steps}],PlotRange->(*All*){{0,180},{um,up}}]*)
